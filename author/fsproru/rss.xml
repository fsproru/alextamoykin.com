<?xml version="1.0" encoding="UTF-8" ?>

<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
   
      <title>alextamoykin.com</title>
   
   <link>http://alextamoykin.com/</link>
   <description>Building world-class software, teams, and products.</description>
   <language>en-us</language>
   <managingEditor> Alex Tamoykin</managingEditor>
   <atom:link href="rss" rel="self" type="application/rss+xml" />
   
	<item>
	  <title>Ship On Time: How to Give Accurate Software Estimates</title>
	  <link>//ship-on-time-how-to-give-accurate-software-estimates</link>
	  <author>Alex Tamoykin</author>
	  <pubDate>2016-10-30T00:00:00-07:00</pubDate>
	  <guid>//ship-on-time-how-to-give-accurate-software-estimates</guid>
	  <description><![CDATA[
	     <p>Imagine your CEO casually asks you: “Hey, how long would it take you to implement the feature X?”. You don’t want to disappoint your CEO and you’re feeling pressured for an answer, so you respond: “It’s pretty simple, I’ll get it done in a week.”. The CEO is happy, you’re fired up. As you’re working on the feature, you find our that you have an external dependency that makes it tricky. The code needs to be refactored and there are no tests. At the end of the week, the CEO shows up again. He/she already sold it to a prospective client but you now need to deliver bad news. We’ve all been there. After reading this post, you’ll know how to prevent it from happening.</p>

<h2 id="why-software-estimates-are-important">Why software estimates are important</h2>
<ol>
  <li>Stakeholders need it to make business decisions</li>
  <li>It helps you understand what you need to build</li>
  <li>It helps you understand how you need to build it</li>
</ol>

<h2 id="how-you-can-estimate">How you can estimate</h2>
<p>One of my old bosses from Russia brought up a simple formula:</p>

<blockquote>
  <p>Think of a worst possible case, double it and you’ll still be wrong. - My Old Boss</p>
</blockquote>

<p>Even though it sounds like a joke, there is something we can learn from it. You can’t predict it exactly right, period. You may know a lot of things, but you don’t know what you don’t know. A software is built on top of other software and you can’t control it completely. There is a technique that I developed over the years that will help you to get it very close. Here are the steps:</p>

<h3 id="gather-requirements">Gather requirements</h3>

<blockquote>
  <p>If you don’t know where you are going, you’ll end up someplace else. - Yogi Berra</p>
</blockquote>

<p>The minute someone asks you about a new feature, ask questions to clarify details. It will lead to more questions and unknowns. Rinse, repeat until you get all your questions answered.</p>

<p>Here is an example. Let’s say we would like to build new profile screen for your user. How should this screen look? Where should the avatar be located? What color is the font, what size it is ? How long should a bio be ? Should we allow editing the bio? Etc.</p>

<h3 id="break-it-down">Break it down</h3>
<p><img src="/assets/images/break_it_down.gif" alt="Break It Down" async="true" /></p>

<p>Now that you have all your questions answered, it’s time to do your homework and break it down. The goal is to break down every individual requirement into small tasks so you can clearly estimate each of them. If your estimate seems high, break down a big task into a set of smaller tasks. Keep breaking it down until your estimate is clear and reasonable. Some people prefer doing it in hours, some people use points. We’ll use hours in this example to keep it simple.</p>

<ul>
  <li>Profile screen scaffold - 0.5 hour</li>
  <li>Serve a user avatar URL from the back end - 1 hour</li>
  <li>Display an avatar image centered on the screen - 0.5 hour</li>
  <li>Serve a user bio from the back end - 0.5 hour</li>
  <li>Display a bio on the profile screen - 0.5 hour</li>
  <li>Create an edit bio endpoint on the back end - 1 hour</li>
  <li>Present a new edit bio screen when user taps on a bio - 1 hour</li>
  <li>Send a bio request and update the bio on the profile screen - 1.5 hours</li>
</ul>

<p>Total: 6.5 hours</p>

<p>This is just a hypothetical example. Your estimates may be different depending on the state of your app, your familiarity with the codebase or even the team you’re on. Factor risk in your individual estimates.</p>

<h3 id="estimate">Estimate</h3>
<p>If you made it to this point, you’re in a pretty good shape. The hardest part is already done and all you need to do is to plug numbers into a simple formula:</p>

<p><strong>Estimate = Total + (Risk Factor * Total)</strong></p>

<p>Yes, a risk factor. Always factor in a risk factor. There is always something that you didn’t think of or something is outside of your control. The exact number varies from project to project. I’ve seen projects executed with a 20% risk factor with an established team and a solid codebase. And I saw a risk factor being as high as 100% for systems that need to talk to some weird unreliable API.</p>

<h3 id="communicate">Communicate</h3>
<p>Communicate your estimate to your steak holders, commit to it and start development. Show progress often and ask for feedback. It allows you to accomplish the following:</p>

<ol>
  <li>It keeps stakeholders involved</li>
  <li>Stakeholders see your progress</li>
  <li>You can course correct early if anything changes</li>
</ol>

<p>I was once in a situation where a feature set wasn’t presented to a stakeholder properly in the very beginning. As a result, a stakeholder had different expectations. If we would show progress earlier, it would be easier to course correct.</p>

<h3 id="falling-behind-re-negotiate">Falling behind? Re-negotiate</h3>
<p>As with any commitment, here are the only things you can do:</p>

<ul>
  <li>Fulfill the commitment, or</li>
  <li>Avoid the commitment, or</li>
  <li>Re-negotiate</li>
</ul>

<p>Notice that failing to deliver on your commitment is not an option. Even though delivering bad news is uncomfortable, failing to deliver your commitment is even worse. People loose trust in your which is hard to recover from. Do one of the things above instead.</p>

<h2 id="final-words">Final words</h2>
<p>At the end of the days, it all comes down to communication. Chose your words wisely and make sure the other side understands you. You are a part of the team and getting expectations aligned makes everyone’s life easier. There is no harm in delivering even bad updates early. People will appreciate it in the long run. You’ll be off sometimes in your estimation and it’s fine as long as you can communicate clearly and re-negotiate. You’ll get better at estimation over time. You may also notice that estimation takes time. You’ll be in a better place if you take your time to estimate your project properly instead of giving a wrong estimate on the spot. Giving accurate estimates is a crucial soft skill for a <a href="/10-steps-to-become-a-senior-software-engineer/">Senior Software Engineer</a>.</p>

	  ]]></description>
	</item>

	<item>
	  <title>Software Engineer Salary: Dollar Dollar Bill Y'All</title>
	  <link>//software-engineer-salary-dollar-dollar-bill-yall</link>
	  <author>Alex Tamoykin</author>
	  <pubDate>2016-10-16T00:00:00-07:00</pubDate>
	  <guid>//software-engineer-salary-dollar-dollar-bill-yall</guid>
	  <description><![CDATA[
	     <p>Are software engineers fairly compensated at your company? Do you or your colleagues focus on building the product instead of getting a raise? Everyone needs to be properly incentivised in order for the team to succeed. Fair software developer salary plays a big part in it. After reading this blog post, you’ll know to play this game right.</p>

<h2 id="the-best-a-salary-can-do-for-you-is-make-you-forget-about-it">The best a salary can do for you is make you forget about it</h2>
<p>If you want to know the actual numbers, keep reading till the end. What matters more than numbers is <em>you and your team focusing on building the product</em>. This is how you win. On the other end, trying to maximize your salary is a slippery slope. You can’t win this game because of the following reasons:</p>

<ol>
  <li>You can always find a place that will pay you more</li>
  <li>Focusing on a promotion doesn’t make you a better software engineer</li>
  <li>The company (especially if it’s an early stage startup) has limited cash that will evaporate if everyone in a company focuses on getting more salary</li>
</ol>

<h2 id="a-higher-salary-doesnt-mean-a-better-job">A higher salary doesn’t mean a better job</h2>
<p>Imagine you’re interviewing at multiple companies and you get an offer that is way above what everyone is willing to pay. You may be excited like this dude:
<img src="/assets/images/excited.gif" alt="Excited dude" async="true" />
If a company wants to pay you a salary significantly above the market, in most cases, there is a reason for it. It may be a big company with a lot of cash and boring work to do. Or the company may be struggling to find people who believe in their mission. Don’t get the high number distract you. Make sure you join a solid team that you can learn from. You’ll spend a lot of time with this group of people every day. Find the company with the vision you believe in. These things matter more than your salary in the grand scheme of things.</p>

<h2 id="ask-for-the-right-number-no-more-no-less">Ask for the right number. No more, no less.</h2>
<p>You should ask for a fair market salary in your geographic area. Look at the salary statistic sites like <a href="https://salary.com" target="blank">salary.com</a> for your experience level and take it as a guiding factor. Don’t accept the offer drastically below or above your current level since you don’t want to be in either of these two situations:</p>

<ol>
  <li>You are underpaid. Let’s say you got excited about a new hot startup. You really want to work there but they say they can’t pay you a reasonable salary for some reason. Maybe money is not super important to you because of your lifestyle and you say yes to it. Sooner or later, your friend developer from another company will tell you how much he/she makes and you’ll eventually quit.</li>
  <li>You are overpaid. The employer really wants to hire you and they decide to pay a price above your level. Even though you’ll get paid a lot of money, your employer will have extremely high expectations of you. Most likely, these expectations will be unrealistic and they will be pressured to terminate you after reviewing engineering budget. In addition to it, your colleague at the same company will eventually know that you’re overpaid. News spread out quickly and it will ruin team morale.</li>
</ol>

<h2 id="negotiation-is-key">Negotiation is key</h2>
<div class="left-align">
<a href="https://www.amazon.com/gp/product/0931213207/ref=as_li_tl?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=0931213207&amp;linkCode=as2&amp;tag=howtoprogramb-20&amp;linkId=99431d63288d3fd28e93cacc1f9e26f4"><img border="0" src="//ws-na.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;MarketPlace=US&amp;ASIN=0931213207&amp;ServiceVersion=20070822&amp;ID=AsinImage&amp;WS=1&amp;Format=_SL250_&amp;tag=howtoprogramb-20" /></a><img src="//ir-na.amazon-adsystem.com/e/ir?t=howtoprogramb-20&amp;l=am2&amp;o=1&amp;a=0931213207" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />
</div>

<p>One of the most important skills to get the right developer salary is a negotiation. I recommend reading <a href="https://www.amazon.com/gp/product/0931213207/ref=as_li_tl?ie=UTF8&amp;tag=howtoprogramb-20&amp;camp=1789&amp;creative=9325&amp;linkCode=as2&amp;creativeASIN=0931213207&amp;linkId=cadf10a661a16a5100bc1d5f9d6dfeed" target="_blank">Negotiating Your Salary: How To Make $1000 a Minute</a>. It explains basic negotiation tactics for salary negotiation. One key advice that I took from this book is to avoid revealing your salary expectations until you make sure it’s the right fit. After being on both sides of the hiring process, I can definitely see how it helps both parties focus on what’s important. Revealing your salary expectations which may or may not fit in a pre-defined budget can be very distracting which can finish a conversation in the very beginning.</p>

<h2 id="how-important-tech-for-your-employer">How important tech for your employer</h2>
<p>Salary negotiation is a two-sided process. Let’s see how it looks from the employer’s perspective. In general, companies can be subdivided into tech companies and non-tech companies. In tech companies, technology plays a crucial role in product development. In other words, if the engineering department disappears, the company is in a big trouble. Engineers are valued in tech companies the most. In this situation, the main focus of the employer is to find top class developers. Every developer makes a massive impact on the business and there is not many great developers available in a current hot job market. You’ll learn the most in such a company and the employer will generally have no problem paying you what you’re worth.</p>

<p>On the other side, in non-tech companies, the main product is powered by an external technology as a service or operationally. Technology is a nice to have addition to the product. In this kind of environment, engineering has a secondary focus in the company. When something is not your primary focus, you would like to get it done cheap and fast. Non-tech companies can afford to hire low-quality talent because of the low technology impact for their business. It’s a good starting point if you are a junior developer. You won’t experience significant growth here and you won’t get paid as much. Make sure you choose the right company for your career stage.</p>

<h2 id="how-much-is-a-senior-software-engineer-salary">How much is a senior software engineer salary</h2>
<p><img src="/assets/images/kanye-west-make-it-rain-dollar.gif" alt="Kanye west makes it rain" />
Another reason to become a <a href="https://alextamoykin.com/10-steps-to-become-a-senior-software-engineer/">Senior Software Engineer</a> is a pretty good salary, comparing to the other professions. It depends on many factors. Junior software engineer salary in Los Angeles starts from $80,000 and it may go to $200,000 and above for a principal role at some companies. It depends on many factors like cost of living, geographic area, technical stack, job market etc.</p>

<h2 id="final-words">Final words</h2>
<p>Focus on your growth and the right thing will happen. The company will become stronger because you deliver a better product and your compensation package will grow with it. In a healthy company, it will always be the case. The main asset of the company, especially in the startup world is <em>the team</em>. If your team grows, the company grows. Companies you want to work in understand it and that’s why they have regular performance reviews and promotions.</p>

	  ]]></description>
	</item>

	<item>
	  <title>3 Must Read Books for Software Consultants</title>
	  <link>//3-must-read-books-for-software-consultants</link>
	  <author>Alex Tamoykin</author>
	  <pubDate>2016-09-12T21:54:34-07:00</pubDate>
	  <guid>//3-must-read-books-for-software-consultants</guid>
	  <description><![CDATA[
	     <p>There are a number of books that you can read on software consulting. These three books focus on the management and business development aspect of running a consulting shop. I specifically didn’t mention any technical books since there are a lot of different ways you can specialize in (if you are looking for tech books, keep reading, I have it for you at the end of this post). Even if these things don’t feel as attractive as diving into a new technology, it is vital to obtain business skills in a software development consulting world. It’s on a full time job there is no need to find work, when you freelance, you need to hustle to get clients. The good news that it’s not a rocket science, so these three books will get you up and running pretty fast:</p>

<h3 id="get-clients-now-by-c-j-haydenhttpswwwamazoncomgpproduct081443245xrefaslitlieutf8taghowtoprogramb-20camp1789creative9325linkcodeas2creativeasin081443245xlinkidd0222499a3fa0d9b0f1e3d475eba72ee">1. <a href="https://www.amazon.com/gp/product/081443245X/ref=as_li_tl?ie=UTF8&amp;tag=howtoprogramb-20&amp;camp=1789&amp;creative=9325&amp;linkCode=as2&amp;creativeASIN=081443245X&amp;linkId=d0222499a3fa0d9b0f1e3d475eba72ee">Get Clients Now by C. J. Hayden</a></h3>
<div class="left-align">
<a href="https://www.amazon.com/gp/product/081443245X/ref=as_li_tl?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=081443245X&amp;linkCode=as2&amp;tag=howtoprogramb-20&amp;linkId=d54ee2399d30a695ca2bd1ae2b9494f0"><img border="0" src="//ws-na.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;MarketPlace=US&amp;ASIN=081443245X&amp;ServiceVersion=20070822&amp;ID=AsinImage&amp;WS=1&amp;Format=_SL250_&amp;tag=howtoprogramb-20" /></a><img src="//ir-na.amazon-adsystem.com/e/ir?t=howtoprogramb-20&amp;l=am2&amp;o=1&amp;a=081443245X" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />
</div>

<p>If you want to have clients, this is an absolute must read. I love the cookbook format of Get Clients Now. It describes a 28 marketing program that leads you to having clients. You choose the tactics that suit you best. If you are best at writing, there is a writing and publicity tactic. If you are great at public speaking, it goes in detail how to utilize it to get clients. After going through the program, you’ll obtain the necessary skills in marketing and sales. You can use these skills to continue having clients in the future. You can get it from Amazon <a href="https://www.amazon.com/gp/product/081443245X/ref=as_li_tl?ie=UTF8&amp;tag=howtoprogramb-20&amp;camp=1789&amp;creative=9325&amp;linkCode=as2&amp;creativeASIN=081443245X&amp;linkId=d0222499a3fa0d9b0f1e3d475eba72ee">here</a>.</p>

<h3 id="getting-things-done-the-art-of-stress-free-productivity-by-david-allenhttpswwwamazoncomgpproduct0143126563refaslitlieutf8taghowtoprogramb-20camp1789creative9325linkcodeas2creativeasin0143126563linkid93a5923f4c2aaec3f72f17784368ae56">2. <a href="https://www.amazon.com/gp/product/0143126563/ref=as_li_tl?ie=UTF8&amp;tag=howtoprogramb-20&amp;camp=1789&amp;creative=9325&amp;linkCode=as2&amp;creativeASIN=0143126563&amp;linkId=93a5923f4c2aaec3f72f17784368ae56">Getting Things Done: The Art of Stress-Free Productivity by David Allen</a></h3>
<div class="left-align">
<a href="https://www.amazon.com/gp/product/0143126563/ref=as_li_tl?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=0143126563&amp;linkCode=as2&amp;tag=howtoprogramb-20&amp;linkId=c57e35d7626da1e58b0374b13b0e8dbc"><img border="0" src="//ws-na.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;MarketPlace=US&amp;ASIN=0143126563&amp;ServiceVersion=20070822&amp;ID=AsinImage&amp;WS=1&amp;Format=_SL250_&amp;tag=howtoprogramb-20" /></a><img src="//ir-na.amazon-adsystem.com/e/ir?t=howtoprogramb-20&amp;l=am2&amp;o=1&amp;a=0143126563" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />
</div>
<p>As you get more clients, you’ll need to do more business development, answer more emails, phone calls, etc. Combining it with coding which is a flow based activity is an art of it’s own. I like the Getting Things Done book because it talks about a framework that allows for efficient execution of both (coding and business development). After using the Getting Things Done methodology at work myself, I now successfully use it to run my errands and many things in life. Here is the <a href="https://www.amazon.com/gp/product/0143126563/ref=as_li_tl?ie=UTF8&amp;tag=howtoprogramb-20&amp;camp=1789&amp;creative=9325&amp;linkCode=as2&amp;creativeASIN=0143126563&amp;linkId=93a5923f4c2aaec3f72f17784368ae56">link to the book</a>.</p>

<h3 id="drive-the-surprising-truth-about-what-motivates-us-by-daniel-h-pinkhttpswwwamazoncomgpproduct1594484805refaslitlieutf8taghowtoprogramb-20camp1789creative9325linkcodeas2creativeasin1594484805linkidb3cf0259b22793a6472bfd20c1fbd9bb">3. <a href="https://www.amazon.com/gp/product/1594484805/ref=as_li_tl?ie=UTF8&amp;tag=howtoprogramb-20&amp;camp=1789&amp;creative=9325&amp;linkCode=as2&amp;creativeASIN=1594484805&amp;linkId=b3cf0259b22793a6472bfd20c1fbd9bb">Drive: The Surprising Truth about What Motivates Us by Daniel H. Pink</a></h3>
<div class="left-align">
<a href="https://www.amazon.com/gp/product/1594484805/ref=as_li_tl?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=1594484805&amp;linkCode=as2&amp;tag=howtoprogramb-20&amp;linkId=b7b583d425923e0f0d302283dacc3ec7"><img border="0" src="//ws-na.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;MarketPlace=US&amp;ASIN=1594484805&amp;ServiceVersion=20070822&amp;ID=AsinImage&amp;WS=1&amp;Format=_SL250_&amp;tag=howtoprogramb-20" /></a><img src="//ir-na.amazon-adsystem.com/e/ir?t=howtoprogramb-20&amp;l=am2&amp;o=1&amp;a=1594484805" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />
</div>
<p>In order to be successful in this business, you’ll need to stay motivated and motivate others. When you team grows, you’ll need to get them fired up about the new project. When a new prospect arrives, you’ll need to get him excited about your team and expertise. Even every time you wake up in a morning and go to work, you need to motivate yourself to do so. The reason I love this book is that it goes deep in explaining what motivates people. It’s combined with scientific studies. The author proposes the three major things on the path to sustainable motivation which are: autonomy, mastery and purpose. I highly recommend reading through it to understand how you can integrate it into your work and life. You can click here to get <a href="https://www.amazon.com/gp/product/1594484805/ref=as_li_tl?ie=UTF8&amp;tag=howtoprogramb-20&amp;camp=1789&amp;creative=9325&amp;linkCode=as2&amp;creativeASIN=1594484805&amp;linkId=b3cf0259b22793a6472bfd20c1fbd9bb">this book</a>.</p>

<h3 id="bonus-freelancers-show-podcasthttpsdevchattvfreelancerstargetblank">Bonus: <a href="https://devchat.tv/freelancers" target="_blank">Freelancer’s Show Podcast</a></h3>
<div class="left-align">
<a href="https://devchat.tv/freelancers"><img src="/assets/images/freelancers_show_thumb.jpg" alt="The Freelancers Show Logo" /></a>
</div>
<p>This podcast is awesome. It’s ran by a long time developer <a href="https://twitter.com/cmaxw">Charles Max Wood</a>. He invites different kind of people to the podcast raging from software freelancers to finance people and lawyers. They discuss topics specific to software consulting and the new episodes come out regularly. I highly recommend to listen to the Freelancer’s Show Podcast as well as the rest of <a href="https://devchat.tv/">DevChat.tv podcasts</a></p>

<h3 id="recap">Recap</h3>
<p>These books are a good starting point and you can take it from here. You’ll start getting the fruits of your labor once your client pipeline is built and working. The good news is that once you get it all set up, you can continue focusing on fun stuff like technology. If you are looking for good reads to master your craft as a software engineer, I recommend reading my earlier post - <a href="http://howtoprogrambetter.com/10-steps-to-become-a-senior-software-engineer/">10 Steps To Become a Senior Software Engineer</a>.  Enjoy.</p>

<p><em>Photo by <a href="https://www.flickr.com/photos/themarmot">themarmot</a>, this post participates in the <a href="http://www.freelancermap.com/freelancer-tips/11536-blog-carnival--book-recommendations-for-freelancers" target="blank">Blog Carnival program on Freelancer Tips</a></em></p>

	  ]]></description>
	</item>

	<item>
	  <title>Top 5 Pitfalls of a Software Development Consultant</title>
	  <link>//top-5-pitfalls-of-a-software-development-consultant</link>
	  <author>Alex Tamoykin</author>
	  <pubDate>2016-09-09T21:35:22-07:00</pubDate>
	  <guid>//top-5-pitfalls-of-a-software-development-consultant</guid>
	  <description><![CDATA[
	     <p>If you never did software consulting, you’ll need to take care of several things. It’s important to do it right from the beginning in order to avoid issues later. I was lucky to have veteran consultants providing me with an advise. After running a software consultancy of my own, I’ve also learned several things the hard way. Here we go, my guest posts on top 5 consulting pitfalls at <a href="http://www.freelancermap.com/freelancer-tips/11534-top-5-pitfalls-of-a-software-development-consultant" target="blank">Freelancer Tips</a>.</p>

<p><em>Photo by <a href="http://www.flickr.com/photos/atoach">atoach</a></em></p>

	  ]]></description>
	</item>

	<item>
	  <title>Living in the Fastlane &#8211; Deploying 100 Apps to the App Store at Victorious</title>
	  <link>//living-in-the-fastlane-deploying-100-apps-to-the-app-store-at-victorious/</link>
	  <author>Alex Tamoykin</author>
	  <pubDate>2016-05-23T21:45:29-07:00</pubDate>
	  <guid>//living-in-the-fastlane-deploying-100-apps-to-the-app-store-at-victorious/</guid>
	  <description><![CDATA[
	     <p>If you need to submit more that one app to App Store or Google Play store, this talk is for you! Here is how we automated our App Deployment Pipeline. We can now submit ~100 apps to the App Store at Victorious with a single command. You’ll learn how to use Fastlane so you can use it for your needs too.</p>

<p>Here is the <a href="https://www.youtube.com/watch?v=pz3gVnIlpyI">video recording</a></p>

<iframe width="560" height="315" src="https://www.youtube.com/embed/pz3gVnIlpyI?controls=0" frameborder="0" allowfullscreen=""></iframe>

<p>and <a href="https://speakerdeck.com/fsproru/living-in-the-fastlane">slides</a></p>

<script async="" class="speakerdeck-embed" data-id="d40a008c79da4db695dcc0fcc4c2dbf9" data-ratio="1.33333333333333" src="//speakerdeck.com/assets/embed.js"></script>

<p><br />
Presented at the <a href="http://www.meetup.com/CocoaHeads-LA/events/230662812/" target="_blank">CocoaHeads Los Angeles meetup</a></p>

<p>Enjoy,</p>

<p>Alex</p>

	  ]]></description>
	</item>

	<item>
	  <title>Test Driven Development with Xcode</title>
	  <link>//test-driven-development-with-xcode/</link>
	  <author>Alex Tamoykin</author>
	  <pubDate>2016-03-13T22:11:26-07:00</pubDate>
	  <guid>//test-driven-development-with-xcode/</guid>
	  <description><![CDATA[
	     <p>Test Driven Development is a great way to take your code to a whole another level. In this presentation, we’ll talk about what is TDD, why TDD is awesome and how to do it in Xcode using Swift and XCTest</p>

<p>Here is the link to a <a href="https://youtu.be/06-9Xsd8saA">Video Recording</a></p>

<iframe width="560" height="315" src="https://www.youtube.com/embed/06-9Xsd8saA?controls=0" frameborder="0" allowfullscreen=""></iframe>

<p>and <a href="https://speakerdeck.com/fsproru/test-driven-development-with-xcode">Slides</a></p>

<script async="" class="speakerdeck-embed" data-id="c7250296330e420e857540912eee7a4f" data-ratio="1.33333333333333" src="//speakerdeck.com/assets/embed.js"></script>

<p><br />
Presented at <a href="http://www.meetup.com/CocoaHeads-LA/events/225155127/" target="_blank">CocoaHeads LA – Testing Edition</a></p>

<p>Enjoy,</p>

<p>Alex</p>

	  ]]></description>
	</item>

	<item>
	  <title>Interview at Swift Coders Podcast</title>
	  <link>//interview-at-swift-coders-podcast/</link>
	  <author>Alex Tamoykin</author>
	  <pubDate>2016-03-06T20:35:22-08:00</pubDate>
	  <guid>//interview-at-swift-coders-podcast/</guid>
	  <description><![CDATA[
	     <p>We’re big proponents of <a href="https://swift.org/" target="_blank" rel="nofollow">Swift</a>, Apple’s new programing language at <a href="http://rightbalance.io/" target="_blank" rel="nofollow">The Right Balance</a>. It’s exciting to see the Swift community evolving. It was great to speak at the opening podcast dedicated to Swift Development called <a href="http://swiftcoders.org/" target="_blank" rel="nofollow">Swift Coders</a>. Kudos to <a href="https://twitter.com/garricn" target="_blank" rel="nofollow">Garric Nahapetian</a> for putting it together.</p>

<p>Check out <a href="https://itunes.apple.com/us/podcast/swiftcoders/id1082937962?mt=2&amp;i=362557025" target="_blank" rel="nofollow">the first episode here</a>, we hope that you really like it.</p>

	  ]]></description>
	</item>

	<item>
	  <title>Equality Operators in Swift: Double equal vs Tripe equal and how to define even your own Quadruple Equal operator</title>
	  <link>//equality-operators-in-swift-double-equal-vs-tripe-equal-and-how-to-define-even-your-own-quadruple-equal-operator/</link>
	  <author>Alex Tamoykin</author>
	  <pubDate>2015-07-12T14:51:33-07:00</pubDate>
	  <guid>//equality-operators-in-swift-double-equal-vs-tripe-equal-and-how-to-define-even-your-own-quadruple-equal-operator/</guid>
	  <description><![CDATA[
	     <p>Yes, a quadruple operator. Bare with me, we’ll get there by the end of this post. In order to figure out how equivalence operators work, let’s start with a simple example:</p>

<h1 id="double-equal">Double equal</h1>

<p>A double equal operator (aka ==) compares <strong>values</strong>. Let’s look at the simple example below:</p>

<figure class="highlight"><pre><code class="language-swift" data-lang="swift"><span class="mi">5</span> <span class="o">==</span> <span class="mi">5</span>                             <span class="c1">// =&gt; true</span>
<span class="s">"same string"</span> <span class="o">==</span> <span class="s">"same string"</span>     <span class="c1">// =&gt; true</span>
<span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">]</span> <span class="o">==</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">]</span>                 <span class="c1">// =&gt; true</span>
<span class="s">"one string"</span> <span class="o">==</span> <span class="s">"different string"</span> <span class="c1">// =&gt; false</span></code></pre></figure>

<p>The left-hand side and the right-hand side are different objects in all three cases. Swift compares basic types with no problem. Let’s see how Swift is doing with our custom octocat classes:</p>

<figure class="highlight"><pre><code class="language-swift" data-lang="swift"><span class="kd">class</span> <span class="kt">Octocat</span> <span class="p">{</span>
    <span class="k">var</span> <span class="nv">legs</span><span class="p">:</span><span class="kt">Int</span>
    <span class="k">var</span> <span class="nv">kind</span><span class="p">:</span><span class="kt">String</span>

    <span class="nf">init</span><span class="p">(</span><span class="nv">legs</span><span class="p">:</span><span class="kt">Int</span><span class="p">,</span> <span class="nv">kind</span><span class="p">:</span><span class="kt">String</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">self</span><span class="o">.</span><span class="n">legs</span> <span class="o">=</span> <span class="n">legs</span>
        <span class="k">self</span><span class="o">.</span><span class="n">kind</span> <span class="o">=</span> <span class="n">kind</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="k">let</span> <span class="nv">eight_leg_octo</span> <span class="o">=</span> <span class="kt">Octocat</span><span class="p">(</span>
    <span class="nv">legs</span><span class="p">:</span><span class="mi">8</span><span class="p">,</span> <span class="nv">kind</span><span class="p">:</span><span class="s">"Coder"</span><span class="p">)</span>
<span class="k">let</span> <span class="nv">another_eight_leg_octo</span> <span class="o">=</span> <span class="kt">Octocat</span><span class="p">(</span>
    <span class="nv">legs</span><span class="p">:</span> <span class="mi">8</span><span class="p">,</span> <span class="nv">kind</span><span class="p">:</span> <span class="s">"Coder"</span><span class="p">)</span>

<span class="c1">// ERROR: Cannot invoke '==' with an argument list of type Octocat, Octocat</span>
<span class="n">eight_leg_octo</span> <span class="o">==</span> <span class="n">another_eight_leg_octo</span></code></pre></figure>

<p>Error! Swift doesn’t know how to compare octocats. C’mon Swift! It’s not that hard, all you need is to compare the number of legs. Although it seems obvious for the author of this code, Swift doesn’t know how to compare custom objects. Every custom object has a meaning. It is pretty reasonable to push the responsibility of defining equivalence to the author. In order to do that, we need to define the equivalence operator for the Octocat class. All you need to do is to return true or false depending whether the left-hand side is equal to the right-hand side. Note that the equivalence operator is redefined outside of the class. But the Octocat type is specified inside parameters.</p>

<figure class="highlight"><pre><code class="language-swift" data-lang="swift"><span class="kd">func</span> <span class="o">==</span><span class="p">(</span><span class="nv">left</span><span class="p">:</span><span class="kt">Octocat</span><span class="p">,</span> <span class="nv">right</span><span class="p">:</span><span class="kt">Octocat</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="kt">Bool</span> <span class="p">{</span>
    <span class="k">return</span> <span class="k">left</span><span class="o">.</span><span class="n">legs</span> <span class="o">==</span> <span class="k">right</span><span class="o">.</span><span class="n">legs</span>
<span class="p">}</span></code></pre></figure>

<p>Now Swift is all happy and our octocats are indeed equal.</p>

<h1 id="triple-equal">Triple equal</h1>

<p>The triple equal (aka ===) operator compares <strong>identity</strong>. If the variable on the left points to the same exact object that the variable on the right, then it returns true. It returns false otherwise. Here is the example:</p>

<figure class="highlight"><pre><code class="language-swift" data-lang="swift"><span class="kd">class</span> <span class="kt">Skateboard</span> <span class="p">{}</span>
<span class="k">let</span> <span class="nv">red_skate</span> <span class="o">=</span> <span class="kt">Skateboard</span><span class="p">()</span>
<span class="k">let</span> <span class="nv">same_red_skate</span> <span class="o">=</span> <span class="n">red_skate</span>

<span class="n">red_skate</span> <span class="o">===</span> <span class="n">same_red_skate</span> <span class="c1">// =&gt; true</span>

<span class="k">let</span> <span class="nv">blue_skate</span> <span class="o">=</span> <span class="kt">Skateboard</span><span class="p">()</span>
<span class="n">red_skate</span> <span class="o">===</span> <span class="n">blue_skate</span>     <span class="c1">// =&gt; false</span></code></pre></figure>

<p>The <em>red_skate</em> variable and the <em>same_red_skate</em> variable point to the same exact instance of the <em>Skateboard</em> class. That’s why our tripe equal operator returns us true. The variable <em>blue_skate</em> on the other hand points to a different instance than what the <em>red_skate</em> variable points to. Therefore, the triple equal operator returns us false in the second case.</p>

<h1 id="custom-operators">Custom operators</h1>

<p>But wait, but there is more. Just to make things more fun, let’s introduce a quadruple equal operator for our Octocat class. Why not? It turns out that you can introduce pretty much any custom operator in Swift pretty easily. It’s a two step process. First, you’ll need to define a new operator. Be careful, it defines this new operator globally:</p>

<figure class="highlight"><pre><code class="language-swift" data-lang="swift"><span class="k">infix</span> <span class="k">operator</span> <span class="o">====</span> <span class="p">{}</span></code></pre></figure>

<p>Then, you’ll need to implement it. Our quadruple equal operator makes absolutely sure that Octocats are the same. It compares the number of legs and the kind or an Octocat <img src="http://howtoprogrambetter.com/wp-includes/images/smilies/simple-smile.png" alt=":-)" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>

<figure class="highlight"><pre><code class="language-swift" data-lang="swift"><span class="kd">func</span> <span class="o">====</span><span class="p">(</span><span class="nv">left</span><span class="p">:</span><span class="kt">Octocat</span><span class="p">,</span> <span class="nv">right</span><span class="p">:</span><span class="kt">Octocat</span><span class="p">)</span> <span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="kt">Bool</span> <span class="p">{</span>
    <span class="k">return</span> <span class="k">left</span><span class="o">.</span><span class="n">legs</span> <span class="o">==</span> <span class="k">right</span><span class="o">.</span><span class="n">legs</span>
        <span class="o">&amp;&amp;</span> <span class="k">left</span><span class="o">.</span><span class="n">kind</span> <span class="o">==</span> <span class="k">right</span><span class="o">.</span><span class="n">kind</span>
<span class="p">}</span></code></pre></figure>

<p>Now that we have it, let’s use it:</p>

<figure class="highlight"><pre><code class="language-swift" data-lang="swift"><span class="n">eight_leg_octo</span> <span class="o">====</span> <span class="n">another_eight_leg_octo</span> <span class="c1">// =&gt; true</span></code></pre></figure>

<h1 id="recap">Recap</h1>

<p>Swift has two major mechanisms for comparing objects. The equality operator and the identity operator. The equality operator compares values. The identity operator checks whether variables point to the same instance. Swift provides us with a way of defining custom operators. I can see it being useful in certain cases but you can easily take it too far. Before defining a new custom operator, ask yourself whether you can accomplish the same goal with existing operators.</p>

<p>Cheers,</p>

<p>Alex</p>

<p><em>Photo by <a href="https://www.flickr.com/photos/ssoosay">ssoosay</a></em></p>

	  ]]></description>
	</item>

	<item>
	  <title>Off The Rails</title>
	  <link>//off-the-rails/</link>
	  <author>Alex Tamoykin</author>
	  <pubDate>2015-04-22T23:02:18-07:00</pubDate>
	  <guid>//off-the-rails/</guid>
	  <description><![CDATA[
	     <p>Rails is awesome, but it’s not the best framework for building fat client web applications. I’ll demonstrate why and how we’ve broken our Rails app into an Angular client and a thin API back end.</p>

<p>Here is the link to the <a href="https://www.youtube.com/embed/gtOb6vDguK8?controls=0">video recording</a></p>

<iframe width="560" height="315" src="https://www.youtube.com/embed/gtOb6vDguK8?controls=0" frameborder="0" allowfullscreen=""></iframe>

<p>and <a href="https://speakerdeck.com/fsproru/off-the-rails">slides</a></p>

<script async="" class="speakerdeck-embed" data-id="e373a4b000f30132ae432a25e2af3406" data-ratio="1.33333333333333" src="//speakerdeck.com/assets/embed.js"></script>

<p><br />
Presented: <a href="http://www.meetup.com/socal-angular/events/190913672/">SoCal AngularJs meetup</a>, photo by <a href="https://www.flickr.com/photos/javcon117">Photo by javcon117</a>.</p>

<p>Enjoy,</p>

<p>Alex</p>

	  ]]></description>
	</item>

	<item>
	  <title>Data Types in Swift</title>
	  <link>//data-types-in-swift/</link>
	  <author>Alex Tamoykin</author>
	  <pubDate>2015-03-08T11:09:50-07:00</pubDate>
	  <guid>//data-types-in-swift/</guid>
	  <description><![CDATA[
	     <p>I’m currently teaching a <a title="Mobile Development at General Assembly" href="https://generalassemb.ly/education/mobile-development" target="_blank">mobile development course at GA</a>. I’ll be sharing my swift lessons one by one. Lesson 1: Data Types.After reading this blog post you’ll be able to learn and use the basic data types in Swift.I’m going to briefly introduce a data type. Then I’ll show the syntax for creating it and what you can do with it.</p>

<p>Ready, get set, go!</p>

<h2 id="string">String</h2>

<p>The String datatype is used for storing and manipulating text. You start defining a string by using a double quotes symbol following by your text. Finish defining your string by using a second double quotes symbol.</p>

<figure class="highlight"><pre><code class="language-swift" data-lang="swift"><span class="s">""</span>                    <span class="c1">// an empty string</span>
<span class="s">"hello world"</span>         <span class="c1">// a string with words</span>

<span class="nf">countElements</span><span class="p">(</span><span class="s">"dude"</span><span class="p">)</span> <span class="c1">// =&gt; 4</span>
<span class="s">"dude"</span><span class="o">.</span><span class="n">isEmpty</span>        <span class="c1">// =&gt; false</span>
<span class="s">""</span><span class="o">.</span><span class="n">isEmpty</span>            <span class="c1">// =&gt; true</span></code></pre></figure>

<h2 id="boolean">Boolean</h2>

<p>A boolean can be either true or false. It’s useful in conditions inside control flow statements like if. It also helps with checking whether a certain condition is met.</p>

<figure class="highlight"><pre><code class="language-swift" data-lang="swift"><span class="kc">true</span>  <span class="c1">// a boolean with a value of true</span>
<span class="kc">false</span> <span class="c1">// a boolean with a value offalse</span>

<span class="k">let</span> <span class="nv">age</span> <span class="o">=</span> <span class="mi">19</span>
<span class="k">if</span> <span class="n">age</span> <span class="o">&gt;=</span> <span class="mi">18</span> <span class="p">{</span>
  <span class="nf">println</span><span class="p">(</span><span class="s">"Congratulations! Now you can now get a California driver license."</span><span class="p">)</span>
<span class="p">}</span></code></pre></figure>

<h2 id="range">Range</h2>

<p>The Range data type is used to define a range of values. It’s very handy to define long sequences.</p>

<figure class="highlight"><pre><code class="language-swift" data-lang="swift"><span class="mi">0</span><span class="o">...</span><span class="mi">3</span> <span class="c1">// =&gt; 0,1,2,3</span>
<span class="mi">0</span><span class="o">..&lt;</span><span class="mi">3</span> <span class="c1">// =&gt; 0,1,2&lt;/pre&gt;</span></code></pre></figure>

<h2 id="integer">Integer</h2>

<p>An integer describes a whole number without a decimal point. It’s useful for performing any sort of math on whole numbers.</p>

<figure class="highlight"><pre><code class="language-swift" data-lang="swift"><span class="mi">1</span>     <span class="c1">// an integer with a value of 1</span>

<span class="mi">1</span> <span class="o">-</span> <span class="mi">2</span> <span class="c1">// =&gt; -1</span>
<span class="mi">3</span> <span class="o">+</span> <span class="mi">2</span> <span class="c1">// =&gt; 5</span>
<span class="mi">2</span> <span class="o">*</span> <span class="mi">2</span> <span class="c1">// =&gt; 4</span></code></pre></figure>

<h2 id="double--float">Double / Float</h2>

<p>Doubles and Floats are used for numbers with precision. A double is twice as precise as a float.</p>

<figure class="highlight"><pre><code class="language-swift" data-lang="swift"><span class="mf">4.2</span> <span class="c1">// a double with a value of 4.2</span>

<span class="k">let</span> <span class="nv">my_float</span> <span class="p">:</span> <span class="kt">Float</span> <span class="o">=</span> <span class="mf">4.2</span> <span class="c1">// If you want to use float to consume some memory, you'll need to explicitly specify avariable'stype&lt;/pre&gt;</span></code></pre></figure>

<h2 id="array">Array</h2>

<p>Array is a zero indexed, ordered collection of elements.Arrays come in handy when you need to store and operate on a collection of elements.</p>

<figure class="highlight"><pre><code class="language-swift" data-lang="swift"><span class="p">[</span><span class="s">"a"</span><span class="p">,</span><span class="s">"b"</span><span class="p">,</span><span class="s">"c"</span><span class="p">,</span><span class="s">"d"</span><span class="p">]</span>    <span class="c1">// an array of characters</span>
<span class="p">[</span><span class="mf">1.2</span><span class="p">,</span> <span class="mf">3.4</span><span class="p">,</span> <span class="mf">6.7</span><span class="p">,</span> <span class="mf">5.6</span><span class="p">]</span> <span class="c1">// an array of numbers</span>

<span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">]</span> <span class="o">+</span> <span class="p">[</span><span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="p">]</span>        <span class="c1">// =&gt; [1,2,3,4]</span>
<span class="k">let</span> <span class="nv">my_array</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">]</span>
<span class="n">my_array</span><span class="o">.</span><span class="n">count</span>       <span class="c1">// =&gt; 4</span>

<span class="c1">// retrieving the first element of an array</span>
<span class="n">my_array</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>          <span class="c1">// =&gt; 1</span></code></pre></figure>

<h2 id="dictionary">Dictionary</h2>

<p>A dictionary is a collection of key value pairs. A value is stored and retrieved from a dictionary by it’s key. Dictionaries are useful for managing different sets of data. For example keeping a track of heroes and their superpowers 😉</p>

<figure class="highlight"><pre><code class="language-swift" data-lang="swift"><span class="c1">// A dictionary with 3 key value pairs</span>
<span class="k">var</span> <span class="nv">heroes</span> <span class="o">=</span> <span class="p">[</span>
 <span class="s">"wonder_woman"</span><span class="p">:</span> <span class="p">[</span><span class="s">"strong"</span><span class="p">],</span>
 <span class="s">"aqua_man"</span><span class="p">:</span> <span class="p">[</span><span class="s">"can breathe underwater"</span><span class="p">],</span>
 <span class="s">"wonder twins"</span><span class="p">:</span> <span class="p">[</span><span class="s">"take forms of other things"</span><span class="p">]</span>
<span class="p">]</span>

<span class="c1">// retrieving values using keys</span>
<span class="n">heroes</span><span class="p">[</span><span class="s">"wonder_woman"</span><span class="p">]</span> <span class="c1">// =&gt; strong</span>
<span class="n">heroes</span><span class="p">[</span><span class="s">"aqua_man"</span><span class="p">]</span>     <span class="c1">// =&gt; can breathe underwater</span>

<span class="c1">// inserting a new key / value pair</span>
<span class="n">heroes</span><span class="p">[</span><span class="s">"spiderman"</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="s">"spidey sense"</span><span class="p">,</span> <span class="s">"throw a web"</span><span class="p">]</span><span class="o">&lt;/</span><span class="n">pre</span><span class="o">&gt;</span></code></pre></figure>

<p>Feel free to play with this code in the playgrounds. Every data type has a lot more useful methods on it.</p>

<p>Enjoy,</p>

<p>Alex</p>

<p><em>Photo by <a href="https://www.flickr.com/photos/yukop">yukop</a></em></p>

	  ]]></description>
	</item>


</channel>
</rss>
